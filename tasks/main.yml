---
- name: Set hostname
  hostname:
    name: "{{ local_hostname | default(inventory_hostname) }}"
  become: true

- name: Add authorized keys for pi
  authorized_key:
    user: pi
    state: present
    key: "{{ key }}"
  loop: "{{ authorized_keys }}"
  loop_control:
    loop_var: key
  when: authorized_keys is defined

- name: Set config.txt options
  lineinfile:
    regexp: '^{{ setting.name }}='
    line: "{{ setting.name }}={{ setting.value }}"
    path: /boot/config.txt
    state: present
  loop: "{{ config_settings }}"
  loop_control:
    loop_var: setting
  when: config_settings is defined
  notify:
    - Reboot Pi
  become: true

- name: Change password for pi
  user:
    name: pi
    password: "{{ pi_password }}"
  when: pi_password is defined

- name: Disable IPv6
  ansible.posix.sysctl:
    name: "{{ line.name }}"
    value: "{{ line.value }}"
    reload: true
  loop:
    - name: net.ipv6.conf.all.disable_ipv6
      value: 1
    - name: net.ipv6.conf.default.disable_ipv6
      value: 1
    - name: net.ipv6.conf.lo.disable_ipv6
      value: 1
    - name: net.ipv6.conf.eth0.disable_ipv6
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 0
    - name: net.bridge.bridge-nf-call-arptables
      value: 0
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 0
  loop_control:
    loop_var: line
  when: disable_ipv6
  notify:
    - Reboot Pi
  become: true

- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Perform any package modifications requested
  apt:
    name: "{{ package.name }}"
    state: "{{ package.state }}"
    autoremove: "{{ 'yes' if package.state == 'absent' else 'no' }}"
    purge: "{{ 'yes' if package.state == 'absent' else 'no' }}"
  loop: "{{ packages }}"
  loop_control:
    loop_var: package
  when: packages is defined
  become: true
